tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-utilities-plugin

inputs:
  subscription_id:
    type: string
    default: { get_secret: azure_subscription_id }

  tenant_id:
    type: string
    default: { get_secret: azure_tenant_id }

  client_id:
    type: string
    default: { get_secret: azure_client_id }

  client_secret:
    type: string
    default: { get_secret: azure_client_secret }

  endpoint_resource:
    default: https://management.core.windows.net/

  endpoints_resource_manager:
    default: https://management.azure.com

  endpoint_verify:
    default: True

  endpoint_storage:
    type: string
    default: core.windows.net

  location:
    type: string
    default: { get_secret: azure_location }

  retry_after:
    type: integer
    default: 5

  resource_prefix:
    default: cfy

  resource_suffix:
    default: 0

  endpoints_active_directory:
    type: string
    default: https://login.microsoftonline.com

  azure_network_blueprint_name:
    type: string
    default: azure-networks-bp

  azure_network_deployment_name:
    type: string
    default: azure-networks

  vm_size:
    type: string
    required: true
    default: Standard_B2s

  vm_os_family:
    type: string
    required: true
    default: linux

  vm_image_publisher:
    type: string
    required: true
    default: fortinet

  vm_image_offer:
    type: string
    required: true
    default: fortinet_fortigate-vm_v5

  vm_image_sku:
    type: string
    required: true
    default: fortinet_fg-vm_payg

  vm_image_version:
    type: string
    required: true
    default: 6.0.3

  vm_os_username:
    description: >
      Username to create as the VM's administrator user
    type: string
    required: true
    default: cloudify

  vm_os_password:
    description: >
      Password to use for the VM's administrator user
    type: string
    required: true
    default: Cl0ud1fy!

  vnf_vm_name:
    type: string

dsl_definitions:
  azure_config: &azure_config
    subscription_id: { get_input: subscription_id }
    tenant_id: { get_input: tenant_id }
    client_id: { get_input: client_id }
    client_secret: { get_input: client_secret }
    endpoint_resource: { get_input: endpoint_resource }
    endpoints_resource_manager: { get_input: endpoints_resource_manager }
    endpoint_verify: { get_input: endpoint_verify }
    endpoints_active_directory: { get_input: endpoints_active_directory }

node_templates:

  common_resources:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: azure_network_blueprint_name }
          external_resource: true
        deployment:
          id: { get_input: azure_network_deployment_name }
          outputs:
            resource_group: resource_group
            virtual_network: virtual_network
            mgmt_subnet: mgmt_subnet
            wan_subnet: wan_subnet
            lan_subnet: lan_subnet
            network_security_group: network_security_group
            location: location
          external_resource: true
        reexecute: false

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: *azure_config
      name: { get_attribute: [common_resources, deployment, outputs, resource_group] }
      use_external_resource: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: common_resources

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      azure_config: *azure_config
      name: { concat: [ { get_input: resource_prefix }, 'storageaccount', { get_input: resource_suffix } ] }
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      azure_config: *azure_config
      use_external_resource: true
      name: { get_attribute: [ common_resources, deployment, outputs, virtual_network ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  mgmt_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *azure_config
      use_external_resource: true
      name: { get_attribute: [ common_resources, deployment, outputs, mgmt_subnet ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: virtual_network

  wan_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *azure_config
      use_external_resource: true
      name: { get_attribute: [ common_resources, deployment, outputs, wan_subnet ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: virtual_network

  lan_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *azure_config
      use_external_resource: true
      name: { get_attribute: [ common_resources, deployment, outputs, lan_subnet ] }
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: virtual_network

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      azure_config: *azure_config
      use_external_resource: true
      name: { get_attribute: [ common_resources, deployment, outputs, network_security_group ] }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  mgmt_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: mgmt_subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: mgmt_public_ip_address

  mgmt_public_ip_address:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config:  *azure_config
      use_external_resource: false
      name: { concat: [ { get_input: resource_prefix }, '_mgmtpia', { get_input: resource_suffix } ] }
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  mgmt_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      primary: true
      # primary: false
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: mgmt_nic_ip_cfg
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  # wan_public_ip_address:
  #   type: cloudify.azure.nodes.network.PublicIPAddress
  #   properties:
  #     azure_config:  *azure_config
  #     use_external_resource: false
  #     name: { concat: [ { get_input: resource_prefix }, '_mgmtpia', { get_input: resource_suffix } ] }
  #     location: { get_input: location }
  #     retry_after: { get_input: retry_after }
  #     resource_config:
  #       publicIPAllocationMethod: Static
  #   relationships:
  #     - type: cloudify.azure.relationships.contained_in_resource_group
  #       target: resource_group

  wan_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: wan_subnet
      # - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      #   target: wan_public_ip_address

  wan_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      # primary: true
      primary: false
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: wan_nic_ip_cfg
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  lan_nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: lan_subnet

  lan_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      primary: false
    relationships:
      - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
        target: lan_nic_ip_cfg
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.nic_connected_to_network_security_group
        target: network_security_group

  vnf_vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      agent_config:
        install_method: none
      azure_config: *azure_config
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      name: { concat: [ { get_input: resource_prefix }, { get_input: vnf_vm_name }, { get_input: resource_suffix } ] }
      os_family: { get_input: vm_os_family }
      plan:
        name: { get_input: vm_image_sku }
        publisher: { get_input: vm_image_publisher }
        product: { get_input: vm_image_offer }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: vm_size }
        storageProfile:
          imageReference:
            publisher: { get_input: vm_image_publisher }
            offer: { get_input: vm_image_offer }
            sku: { get_input: vm_image_sku }
            version: { get_input: vm_image_version }
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: { get_input: vm_os_username }
          adminPassword: { get_input: vm_os_password }
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.connected_to_storage_account
        target: storage_account
      - type: cloudify.azure.relationships.connected_to_nic
        target: mgmt_nic
      - type: cloudify.azure.relationships.connected_to_nic
        target: wan_nic
      - type: cloudify.azure.relationships.connected_to_nic
        target: lan_nic

outputs:

  vm_public_ip_address:
    value: { get_attribute: [vnf_vm, public_ip_address] }
