tosca_definitions_version: cloudify_dsl_1_3

description: >
  Create an instance of BIG-IP on Azure.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-utilities-plugin

inputs:
  bigip_license_key:
    default: XNFZK-ZGOJN-WLVPO-LFUPL-SUWZDMU

  #TODO: Below inputs are for now passed via inputs, later on to be changed to capabilities
  bigip_ip:
    default: 40.118.91.121
  public_ip:
    default: 10.10.2.4
  wan_ip:
    default: 10.10.3.4

dsl_definitions:

  terminal_auth: &terminal_auth
    user: { get_secret: bigip_username }
    password: { get_secret: bigip_password }
    ip: { get_input: bigip_ip }
    promt_check:
      - '#'
      - '$'
    errors:
      - "Command fail."

node_templates:

  license:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: Resources/templates/install_license.txt
                params:
                  REG_KEY: { get_input: bigip_license_key }
        delete:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: Resources/templates/revoke_license.txt
                responses:
                  - question: 'Revoking the license will return this BIG-IP to an unlicensed state.  It will stop processing traffic. Are you sure? Y/N:'
                    answer: 'Y'

  vlan_configuration:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: Resources/templates/vlan_config.txt
                params:
                  IP_INSIDE: { get_input: wan_ip }
                  IP_OUTSIDE: { get_input: public_ip }
        delete:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: Resources/templates/vlan_config_delete.txt
                params:
                  IP_INSIDE: { get_input: wan_ip }
                  IP_OUTSIDE: { get_input: public_ip }
    relationships:
    - type: cloudify.relationships.depends_on
      target: license

  #For service blueprint
#  ltm_config:
#    type: cloudify.terminal.raw
#    interfaces:
#      cloudify.interfaces.lifecycle:
#        start:
#          inputs:
#            terminal_auth: *terminal_auth
#            calls:
#              - template: Resources/templates/ltm_config.txt
#                params:
#                  APP_NODE_1_IP: { get_input: app_node_1_ip } #App server IP (In our case it will be from WAN network)
#                  APP_NODE_1_PORT: { get_input: app_node_1_port } #ie 8080
#                  DESTINATION_IP: { get_attribute: [f5_baseline_vnf_deployment, deployment, outputs, outside_ip ] } # public ip
#                  DESTINATION_PORT: { get_input: destination_port } # new port for app
#        stop:
#          inputs:
#            terminal_auth: *terminal_auth
#            calls:
#              - template: Resources/templates/ltm_config_stop.txt
#    relationships:
#    - type: cloudify.relationships.depends_on
#      target: license
